<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 1. DataSource 등록 (순서가 중요하다): 빈객체를 위에서부터 생성후 밑에꼐 위에것을 가져다 쓰므로.. destroy-method 
		: 주어진 세션을 자동으로 close하라는 의미의 속성 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="CMARKET" />
		<property name="password" value="CMARKET" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!-- classpath경로 숙지, mybatis sqlSession 등록한걸 해준거임 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 마바에서 별도로 스프링과 연결할수있게끔 별도로 라이브러리를 제공함 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession" />
	</bean>

	<!-- 트랜잭션 처리 (commit/rollback) -->
	<!-- 트랜잭션 매니져 bean 등록 -->
	<!-- 트랜잭션 1번 방식 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 파일 업로드시 사용(파일크기 지정) MultipartReolver CommonsMultipartResolver 빈을 설정하여 
		파일 업로드를 처리한다. JSP파일의 enctype을 multipart/form-data로 설정 commons-fileupload,commons-io 
		jar파일이 필요하다. maxUploadSize : 최대 업로드 가능한 바이트 크기, 기본값은 -1이다. -1은 제한이 없음을 의미 
		maxInMemorySize : 디스크에 임시파일을 생성하기 전에 메모리에 보관할 수 있는 최대 바이트 크기, 기본값은 10240바이트 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>

	<!-- <bean class="org.springframework.mock.web.MockServletContext"/> -->

	
</beans>

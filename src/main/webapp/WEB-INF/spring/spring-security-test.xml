<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<s:http auto-config="true" use-expressions="true">

		<!-- 정적 리소스는 모두 접근 허용 -->
		<s:intercept-url pattern="/resources/**"
			access="permitAll" />

		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<!-- <s:intercept-url pattern="/member/login*" access="isAnonymous()" /> -->
		<s:intercept-url pattern="/member/join*"
			access="isAnonymous()" />

		<!-- 관리자페이지는 관리자만 접근 허용 -->
		<s:intercept-url pattern="/admin/**"
			access="hasRole('admin')" />

		<!-- 로그인 설정 -->
		<!-- 설정 제거 -->
		<!-- failure-handdler : authentication-failure-url="login.do" -->
		<!-- success-handler : default-target-url="home.do" -->
		<!-- 위 설정을 통해 인증 실패의 경우 핸들러로 지정된 Bean 객체에 처리를 요청하도록 합니다. @Service 어노테이션을 
			클래스에 붙여줬으므로 클래스는 자동으로 루트 컨테이너의 Bean으로 등록되며, 이름을 따로 지정해주지 않았다면 클래스명에서 앞글자만 
			소문자로 써주면 됩니다. -->
		<s:form-login username-parameter="user_id"
			password-parameter="user_pwd" login-processing-url="/login.do"
			login-page="/loginForm.do"


			authentication-failure-handler-ref="userLoginFailHandler"
			authentication-success-handler-ref="userLoginSuccessHandler" />

		<!-- 로그아웃 설정 -->
		<s:logout logout-url="/logout.do" logout-success-url="/home.do"
			invalidate-session="true" delete-cookies="true" />

		<!-- 권한이 없어서 금지된 URI 접속할 때 보여줄 페이지(403 에러 페이지 대체) -->
		<s:access-denied-handler error-page="/login.do" />
	</s:http>


	<!-- DB 연동 설정 -->
	<!--<s:authentication-provider user-service-ref="userLoginService"> -->
	<s:authentication-manager>
		<s:authentication-provider
			user-service-ref="mDao">
		</s:authentication-provider>
	</s:authentication-manager>


	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


</beans>